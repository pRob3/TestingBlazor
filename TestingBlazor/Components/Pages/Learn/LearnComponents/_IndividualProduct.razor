
<div class="bg-light border col-6" @onclick="(args)=>SelectedProductUpdated(args, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>

    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorites <br /><br />

    Name - @Product.Name <br />
    Show Properties:
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var propProp in Product.ProductProperties)
        {
            <p>
                @propProp.Key - @propProp.Value
            </p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.Id" />
</div>

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedProductChange { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)(e.Value ?? false));
    }
    
    private async Task SelectedProductUpdated(MouseEventArgs args, string productName)
    {
        await OnSelectedProductChange.InvokeAsync(productName);
    }
}
