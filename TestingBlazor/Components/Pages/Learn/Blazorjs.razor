@page "/blazorjs"

@inject IJSRuntime _JSRuntime

<h3>Blazor JS</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmButton">Test Confirm Button</button>
</div>

<div class="row">
    @if(ConfirmResult)
    {
        <p>Confirmation has been made</p>
    }
    else
    {
        <p>Confirmation has NOT been made</p>
    }
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="ToastrSuccess">Test Confirm Button</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="ToastrError">Test Confirm Button</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="SwalSuccess">Sweetalert Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SwalError">Sweetalert Error</button>
</div>

@code {
    private string ConfirmMessage = "Are you sure?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmButton()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JSRuntime.ToastrSuccess("This is a success message");
    }

    private async Task ToastrError()
    {
        await _JSRuntime.ToastrError("This is a error message");
    }

    private async Task SwalSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("showSwal", "success", "This is a success message");

    }

    private async Task SwalError()
    {
        await _JSRuntime.InvokeVoidAsync("showSwal", "error", "This is a error message");
    }
}
